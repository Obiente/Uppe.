---
export interface Props {
  variant?: "primary" | "secondary" | "success" | "warning" | "error" | "info" | "neutral";
  size?: "sm" | "md" | "lg";
  class?: string;
  [key: string]: any;
}

const { 
  variant = 'primary',
  size = 'md',
  class: className = '',
  ...rest
} = Astro.props;

const baseClasses = "inline-flex items-center font-medium rounded-full transition-all duration-200";

const variantClasses = {
  primary: "bg-primary text-inverse",
  secondary: "bg-bg-secondary border border-primary text-primary",
  success: "bg-status-success text-inverse",
  warning: "bg-status-warning text-inverse",
  error: "bg-status-error text-inverse",
  info: "bg-status-info text-inverse",
  neutral: "bg-bg-elevated text-secondary border border-primary"
};

// Size classes with refined spacing
const sizeClasses = {
  sm: "px-2.5 py-1 text-xs gap-1",
  md: "px-3 py-1.5 text-sm gap-1.5",
  lg: "px-4 py-2 text-base gap-2"
};

const classes = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`;
---

<span class={classes} {...rest}>
  <slot />
</span>
